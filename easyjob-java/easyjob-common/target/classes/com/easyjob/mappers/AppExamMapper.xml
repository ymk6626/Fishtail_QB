<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyjob.mappers.AppExamMapper">

	<!--实体映射-->
	<resultMap id="base_result_map" type="com.easyjob.entity.po.AppExam">
		<!--自增ID-->
		<id column="exam_id" property="examId"  />
		<!--用户ID-->
		<result column="user_id" property="userId"  />
		<!--用户昵称-->
		<result column="nick_name" property="nickName"  />
		<!--创建时间-->
		<result column="create_time" property="createTime"  />
		<!--开始时间-->
		<result column="start_time" property="startTime"  />
		<!--结束时间-->
		<result column="end_time" property="endTime"  />
		<!--0:未完成 1:已完成-->
		<result column="status" property="status"  />
		<!--备注-->
		<result column="remark" property="remark"  />
	</resultMap>


	<!-- 通用查询结果列-->
	<sql id="base_column_list">
		 exam_id,user_id,nick_name,create_time,start_time,
		 end_time,status,remark
	</sql>

	<sql id="base_condition_filed">
			<if test="query.examId != null">
				 and  exam_id = #{query.examId}
			</if>
			<if test="query.userId != null and query.userId!=''">
				 and  user_id = #{query.userId}
			</if>
			<if test="query.nickName != null and query.nickName!=''">
				 and  nick_name = #{query.nickName}
			</if>
			<if test="query.createTime != null and query.createTime!=''">
				 <![CDATA[ and  create_time=str_to_date(#{query.createTime}, '%Y-%m-%d') ]]>
			</if>
			<if test="query.startTime != null and query.startTime!=''">
				 <![CDATA[ and  start_time=str_to_date(#{query.startTime}, '%Y-%m-%d') ]]>
			</if>
			<if test="query.endTime != null and query.endTime!=''">
				 <![CDATA[ and  end_time=str_to_date(#{query.endTime}, '%Y-%m-%d') ]]>
			</if>
			<if test="query.status != null">
				 and  status = #{query.status}
			</if>
			<if test="query.remark != null and query.remark!=''">
				 and  remark = #{query.remark}
			</if>
	</sql>
	<!-- 通用条件列-->
	<sql id="base_condition">
	 <where>
		 <include refid="base_condition_filed" />
	 </where>
	</sql>

	<!-- 通用查询条件列-->
	<sql id="query_condition">
	 <where>
			<include refid="base_condition_filed" />
			<if test="query.userIdFuzzy!= null  and query.userIdFuzzy!=''">
				 and  user_id like concat('%', #{query.userIdFuzzy}, '%')
			</if>
			<if test="query.nickNameFuzzy!= null  and query.nickNameFuzzy!=''">
				 and  nick_name like concat('%', #{query.nickNameFuzzy}, '%')
			</if>
			<if test="query.createTimeStart!= null and query.createTimeStart!=''">
				 <![CDATA[ and  create_time>=str_to_date(#{query.createTimeStart}, '%Y-%m-%d') ]]>
			</if>
			<if test="query.createTimeEnd!= null and query.createTimeEnd!=''">
				 <![CDATA[ and  create_time< date_sub(str_to_date(#{query.createTimeEnd},'%Y-%m-%d'),interval -1 day) ]]>
			</if>
			<if test="query.startTimeStart!= null and query.startTimeStart!=''">
				 <![CDATA[ and  start_time>=str_to_date(#{query.startTimeStart}, '%Y-%m-%d') ]]>
			</if>
			<if test="query.startTimeEnd!= null and query.startTimeEnd!=''">
				 <![CDATA[ and  start_time< date_sub(str_to_date(#{query.startTimeEnd},'%Y-%m-%d'),interval -1 day) ]]>
			</if>
			<if test="query.endTimeStart!= null and query.endTimeStart!=''">
				 <![CDATA[ and  end_time>=str_to_date(#{query.endTimeStart}, '%Y-%m-%d') ]]>
			</if>
			<if test="query.endTimeEnd!= null and query.endTimeEnd!=''">
				 <![CDATA[ and  end_time< date_sub(str_to_date(#{query.endTimeEnd},'%Y-%m-%d'),interval -1 day) ]]>
			</if>
			<if test="query.remarkFuzzy!= null  and query.remarkFuzzy!=''">
				 and  remark like concat('%', #{query.remarkFuzzy}, '%')
			</if>
	 </where>
	</sql>

	<!-- 查询集合-->
	<select id="selectList" resultMap="base_result_map" >
		 SELECT <include refid="base_column_list" /> FROM app_exam <include refid="query_condition" />
		 <if test="query.orderBy!=null">
			 order by ${query.orderBy}
		 </if>
		 <if test="query.simplePage!=null">
			 limit #{query.simplePage.start},#{query.simplePage.end}
		 </if>
	</select>

	<!-- 查询数量-->
	<select id="selectCount" resultType="java.lang.Integer" >
		 SELECT count(1) FROM app_exam <include refid="query_condition" />
	</select>

	<!-- 插入 （匹配有值的字段）-->
	<insert id="insert" parameterType="com.easyjob.entity.po.AppExam">
		<selectKey keyProperty="bean.examId" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		 INSERT INTO app_exam
		 <trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="bean.userId != null">
				 user_id,
			</if>
			<if test="bean.nickName != null">
				 nick_name,
			</if>
			<if test="bean.createTime != null">
				 create_time,
			</if>
			<if test="bean.startTime != null">
				 start_time,
			</if>
			<if test="bean.endTime != null">
				 end_time,
			</if>
			<if test="bean.status != null">
				 status,
			</if>
			<if test="bean.remark != null">
				 remark,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="bean.userId!=null">
				 #{bean.userId},
			</if>
			<if test="bean.nickName!=null">
				 #{bean.nickName},
			</if>
			<if test="bean.createTime!=null">
				 #{bean.createTime},
			</if>
			<if test="bean.startTime!=null">
				 #{bean.startTime},
			</if>
			<if test="bean.endTime!=null">
				 #{bean.endTime},
			</if>
			<if test="bean.status!=null">
				 #{bean.status},
			</if>
			<if test="bean.remark!=null">
				 #{bean.remark},
			</if>
		 </trim>
	</insert>

	<!-- 插入或者更新 （匹配有值的字段）-->
	<insert id="insertOrUpdate" parameterType="com.easyjob.entity.po.AppExam">
		 INSERT INTO app_exam
		 <trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.examId != null">
				 exam_id,
			</if>
			<if test="bean.userId != null">
				 user_id,
			</if>
			<if test="bean.nickName != null">
				 nick_name,
			</if>
			<if test="bean.createTime != null">
				 create_time,
			</if>
			<if test="bean.startTime != null">
				 start_time,
			</if>
			<if test="bean.endTime != null">
				 end_time,
			</if>
			<if test="bean.status != null">
				 status,
			</if>
			<if test="bean.remark != null">
				 remark,
			</if>
		 </trim>
		 <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bean.examId!=null">
				 #{bean.examId},
			</if>
			<if test="bean.userId!=null">
				 #{bean.userId},
			</if>
			<if test="bean.nickName!=null">
				 #{bean.nickName},
			</if>
			<if test="bean.createTime!=null">
				 #{bean.createTime},
			</if>
			<if test="bean.startTime!=null">
				 #{bean.startTime},
			</if>
			<if test="bean.endTime!=null">
				 #{bean.endTime},
			</if>
			<if test="bean.status!=null">
				 #{bean.status},
			</if>
			<if test="bean.remark!=null">
				 #{bean.remark},
			</if>
		 </trim>
		 on DUPLICATE key update 
		 <trim prefix="" suffix="" suffixOverrides=",">
			<if test="bean.userId!=null">
				 user_id = VALUES(user_id),
			</if>
			<if test="bean.nickName!=null">
				 nick_name = VALUES(nick_name),
			</if>
			<if test="bean.createTime!=null">
				 create_time = VALUES(create_time),
			</if>
			<if test="bean.startTime!=null">
				 start_time = VALUES(start_time),
			</if>
			<if test="bean.endTime!=null">
				 end_time = VALUES(end_time),
			</if>
			<if test="bean.status!=null">
				 status = VALUES(status),
			</if>
			<if test="bean.remark!=null">
				 remark = VALUES(remark),
			</if>
		 </trim>
	</insert>

	<!-- 添加 （批量插入）-->
	<insert id="insertBatch" parameterType="com.easyjob.entity.po.AppExam" useGeneratedKeys="true" keyProperty="examId">
		 INSERT INTO app_exam(
			 user_id,
			 nick_name,
			 create_time,
			 start_time,
			 end_time,
			 status,
			 remark
		 )values
		 <foreach collection="list" item="item" separator=",">
			 (
				 #{item.userId},
				 #{item.nickName},
				 #{item.createTime},
				 #{item.startTime},
				 #{item.endTime},
				 #{item.status},
				 #{item.remark}
			 )
		 </foreach>
	</insert>

	<!-- 批量新增修改 （批量插入）-->
	<insert id="insertOrUpdateBatch" parameterType="com.easyjob.entity.po.AppExam">
		 INSERT INTO app_exam(
			 user_id,
			 nick_name,
			 create_time,
			 start_time,
			 end_time,
			 status,
			 remark
		 )values
		 <foreach collection="list" item="item" separator=",">
			 (
				 #{item.userId},
				 #{item.nickName},
				 #{item.createTime},
				 #{item.startTime},
				 #{item.endTime},
				 #{item.status},
				 #{item.remark}
			 )
		 </foreach>
			on DUPLICATE key update 
			user_id = VALUES(user_id),
			nick_name = VALUES(nick_name),
			create_time = VALUES(create_time),
			start_time = VALUES(start_time),
			end_time = VALUES(end_time),
			status = VALUES(status),
			remark = VALUES(remark)
	</insert>

	<!--多条件修改-->
	<update id="updateByParam" parameterType="com.easyjob.entity.query.AppExamQuery">
		 UPDATE app_exam
 		 <set> 
			<if test="bean.userId != null">
				 user_id = #{bean.userId},
			</if>
			<if test="bean.nickName != null">
				 nick_name = #{bean.nickName},
			</if>
			<if test="bean.createTime != null">
				 create_time = #{bean.createTime},
			</if>
			<if test="bean.startTime != null">
				 start_time = #{bean.startTime},
			</if>
			<if test="bean.endTime != null">
				 end_time = #{bean.endTime},
			</if>
			<if test="bean.status != null">
				 status = #{bean.status},
			</if>
			<if test="bean.remark != null">
				 remark = #{bean.remark},
			</if>
 		 </set>
 		 <include refid="query_condition" />
	</update>

	<!--多条件删除-->
	<delete id="deleteByParam">
		 delete from app_exam
 		 <include refid="query_condition" />
	</delete>

	<!-- 根据ExamId修改-->
	<update id="updateByExamId" parameterType="com.easyjob.entity.po.AppExam">
		 UPDATE app_exam
 		 <set> 
			<if test="bean.userId != null">
				 user_id = #{bean.userId},
			</if>
			<if test="bean.nickName != null">
				 nick_name = #{bean.nickName},
			</if>
			<if test="bean.createTime != null">
				 create_time = #{bean.createTime},
			</if>
			<if test="bean.startTime != null">
				 start_time = #{bean.startTime},
			</if>
			<if test="bean.endTime != null">
				 end_time = #{bean.endTime},
			</if>
			<if test="bean.status != null">
				 status = #{bean.status},
			</if>
			<if test="bean.remark != null">
				 remark = #{bean.remark},
			</if>
 		 </set>
 		 where exam_id=#{examId}
	</update>

	<!-- 根据ExamId删除-->
	<delete id="deleteByExamId">
		delete from app_exam where exam_id=#{examId}
	</delete>

	<!-- 根据PrimaryKey获取对象-->
	<select id="selectByExamId" resultMap="base_result_map" >
		select <include refid="base_column_list" /> from app_exam where exam_id=#{examId}
	</select>

</mapper>